<mxfile host="65bd71144e">
    <diagram id="H6fCBgWwtKrYuvI8NYH9" name="Page-1">
        <mxGraphModel dx="1409" dy="705" grid="1" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="1" pageScale="1" pageWidth="850" pageHeight="1100" math="0" shadow="0">
            <root>
                <mxCell id="0"/>
                <mxCell id="1" parent="0"/>
                <mxCell id="2" value="&lt;ol class=&quot;latin&quot; id=&quot;NRGRAY9LJAZSRPAUK775&quot; style=&quot;box-sizing: border-box; line-height: 1.8; color: rgb(87, 87, 87); padding: 0px 0px 0px 40px; clear: left; margin: 6px 0px; list-style-type: lower-latin; font-size: 16px; font-style: normal; font-weight: 400; letter-spacing: normal; text-align: left; text-indent: 0px; text-transform: none; word-spacing: 0px; background-color: rgb(255, 255, 255);&quot;&gt;&lt;li id=&quot;MSQG9Y9VJZMWYHM84947&quot; style=&quot;box-sizing: border-box ; font-family: , &amp;quot;cambria&amp;quot; , &amp;quot;times new roman&amp;quot; , &amp;quot;times&amp;quot; , serif ; line-height: 1.6 ; color: rgb(87 , 87 , 87) ; margin: 0px 0px 10px ; padding: 0px ; list-style: lower-latin&quot;&gt;&lt;p id=&quot;UFEX28RY4TF9XMLJB988&quot; style=&quot;box-sizing: border-box ; font-family: , &amp;quot;cambria&amp;quot; , &amp;quot;times new roman&amp;quot; , &amp;quot;times&amp;quot; , serif ; line-height: 1.6 ; color: rgb(87 , 87 , 87) ; margin: 0px ; padding: 0px&quot;&gt;In&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a style=&quot;box-sizing: border-box ; color: rgb(0 , 129 , 188) ; text-decoration: none ; background-color: transparent ; overflow-wrap: break-word&quot;&gt;Chapter 10&lt;/a&gt;, you developed a&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;monofont&quot; style=&quot;box-sizing: border-box ; font-family: &amp;quot;andale mono&amp;quot; , &amp;quot;courier new&amp;quot; , &amp;quot;courier&amp;quot; ; font-size: 15.36px&quot;&gt;Card&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;class that contains a string data field to hold a suit and a numeric data field for a value from 1 to 13. Now extend the class to create a class called&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;monofont&quot; style=&quot;box-sizing: border-box ; font-family: &amp;quot;andale mono&amp;quot; , &amp;quot;courier new&amp;quot; , &amp;quot;courier&amp;quot; ; font-size: 15.36px&quot;&gt;BlackjackCard&lt;/span&gt;. In the game of Blackjack, each card has a point value as well as a face value. These two values match for cards with values of 2 through 10, and the point value is 10 for jacks, queens, and kings (face values 11 through 13). For a simplified version of the game, assume that the value of the ace is 11. (In the official version of Blackjack, the player chooses whether each ace is worth 1 or 11 points.)&lt;/p&gt;&lt;/li&gt;&lt;li id=&quot;TAQFK14PNUZBGUMYB290&quot; style=&quot;box-sizing: border-box ; font-family: , &amp;quot;cambria&amp;quot; , &amp;quot;times new roman&amp;quot; , &amp;quot;times&amp;quot; , serif ; line-height: 1.6 ; color: rgb(87 , 87 , 87) ; margin: 0px 0px 10px ; padding: 0px ; list-style: lower-latin&quot;&gt;&lt;p id=&quot;VUWCYHZVL9G1Z1CKZ970&quot; style=&quot;box-sizing: border-box ; font-family: , &amp;quot;cambria&amp;quot; , &amp;quot;times new roman&amp;quot; , &amp;quot;times&amp;quot; , serif ; line-height: 1.6 ; color: rgb(87 , 87 , 87) ; margin: 0px 0px 15px ; padding: 0px&quot;&gt;Randomly assign values to 10&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;monofont&quot; style=&quot;box-sizing: border-box ; font-family: &amp;quot;andale mono&amp;quot; , &amp;quot;courier new&amp;quot; , &amp;quot;courier&amp;quot; ; font-size: 15.36px&quot;&gt;BlackjackCard&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;objects, then design an application that plays a modified version of Blackjack. The objective is to accumulate cards whose total value equals 21, or whose value is closer to 21 than the opponent’s total value without exceeding 21. Deal five&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;monofont&quot; style=&quot;box-sizing: border-box ; font-family: &amp;quot;andale mono&amp;quot; , &amp;quot;courier new&amp;quot; , &amp;quot;courier&amp;quot; ; font-size: 15.36px&quot;&gt;BlackjackCards&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;each to the player and the computer. Make sure that each&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;monofont&quot; style=&quot;box-sizing: border-box ; font-family: &amp;quot;andale mono&amp;quot; , &amp;quot;courier new&amp;quot; , &amp;quot;courier&amp;quot; ; font-size: 15.36px&quot;&gt;BlackjackCard&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;is unique. For example, a deck cannot contain more than one queen of spades.&lt;/p&gt;&lt;a name=&quot;PageEnd_505&quot; style=&quot;box-sizing: border-box ; color: rgb(0 , 129 , 188) ; text-decoration: none ; background-color: transparent ; overflow-wrap: break-word&quot;&gt;&lt;/a&gt;&lt;p id=&quot;FQHH0FVTL7K35GFDK007&quot; style=&quot;box-sizing: border-box ; font-family: , &amp;quot;cambria&amp;quot; , &amp;quot;times new roman&amp;quot; , &amp;quot;times&amp;quot; , serif ; line-height: 1.6 ; color: rgb(87 , 87 , 87) ; margin: 0px 0px 15px ; padding: 0px&quot;&gt;Determine the winner as follows:&lt;/p&gt;&lt;ul id=&quot;HZLCM00RJ9V9MXXE1533&quot; style=&quot;box-sizing: border-box ; margin: 6px 0px ; padding: 0px 0px 0px 40px ; list-style: disc ; clear: left&quot;&gt;&lt;li id=&quot;CJGQ8LKY5DTYY9691919&quot; style=&quot;box-sizing: border-box ; font-family: , &amp;quot;cambria&amp;quot; , &amp;quot;times new roman&amp;quot; , &amp;quot;times&amp;quot; , serif ; line-height: 1.6 ; color: rgb(87 , 87 , 87) ; margin: 0px 0px 10px ; padding: 0px ; list-style: disc&quot;&gt;&lt;p id=&quot;SFTE786DWSR22DLHV778&quot; style=&quot;box-sizing: border-box ; font-family: , &amp;quot;cambria&amp;quot; , &amp;quot;times new roman&amp;quot; , &amp;quot;times&amp;quot; , serif ; line-height: 1.6 ; color: rgb(87 , 87 , 87) ; margin: 0px ; padding: 0px&quot;&gt;If the player’s first two, first three, first four, or all five cards have a total value of exactly 21, the player wins, even if the computer also achieves a total of 21.&lt;/p&gt;&lt;/li&gt;&lt;li id=&quot;PUDGK5HZLSPJ3QQDF097&quot; style=&quot;box-sizing: border-box ; font-family: , &amp;quot;cambria&amp;quot; , &amp;quot;times new roman&amp;quot; , &amp;quot;times&amp;quot; , serif ; line-height: 1.6 ; color: rgb(87 , 87 , 87) ; margin: 0px 0px 10px ; padding: 0px ; list-style: disc&quot;&gt;&lt;p id=&quot;KZPGV5AN8C4C087EQ868&quot; style=&quot;box-sizing: border-box ; font-family: , &amp;quot;cambria&amp;quot; , &amp;quot;times new roman&amp;quot; , &amp;quot;times&amp;quot; , serif ; line-height: 1.6 ; color: rgb(87 , 87 , 87) ; margin: 0px ; padding: 0px&quot;&gt;If the player’s first two cards do not total exactly 21, sum as many as needed to achieve the highest possible total that does not exceed 21. For example, suppose that the player’s five cards are valued as follows: 10, 4, 5, 9, 2. In that case, the player’s total for the first three cards is 19; counting the fourth card would cause the total to exceed 21.&lt;/p&gt;&lt;/li&gt;&lt;li id=&quot;KKBUN3D8VNZNCPX5N293&quot; style=&quot;box-sizing: border-box ; font-family: , &amp;quot;cambria&amp;quot; , &amp;quot;times new roman&amp;quot; , &amp;quot;times&amp;quot; , serif ; line-height: 1.6 ; color: rgb(87 , 87 , 87) ; margin: 0px 0px 10px ; padding: 0px ; list-style: disc&quot;&gt;&lt;p id=&quot;CJTQ8AT6A1JLHRGF6422&quot; style=&quot;box-sizing: border-box ; font-family: , &amp;quot;cambria&amp;quot; , &amp;quot;times new roman&amp;quot; , &amp;quot;times&amp;quot; , serif ; line-height: 1.6 ; color: rgb(87 , 87 , 87) ; margin: 0px ; padding: 0px&quot;&gt;After you have determined the player’s total, sum the computer’s cards in sequence. For example, suppose that the computer’s cards are 10, 10, 5, 6, 7. The first two cards total 20; you would not use the third card because it would cause the total to exceed 21.&lt;/p&gt;&lt;/li&gt;&lt;li id=&quot;KCASKJFQESE0W6FHX240&quot; style=&quot;box-sizing: border-box ; font-family: , &amp;quot;cambria&amp;quot; , &amp;quot;times new roman&amp;quot; , &amp;quot;times&amp;quot; , serif ; line-height: 1.6 ; color: rgb(87 , 87 , 87) ; margin: 0px 0px 10px ; padding: 0px ; list-style: disc&quot;&gt;&lt;p id=&quot;BMZVYUVUWNPG9BLMS483&quot; style=&quot;box-sizing: border-box ; font-family: , &amp;quot;cambria&amp;quot; , &amp;quot;times new roman&amp;quot; , &amp;quot;times&amp;quot; , serif ; line-height: 1.6 ; color: rgb(87 , 87 , 87) ; margin: 0px ; padding: 0px&quot;&gt;The winner has the highest total among the cards used. For example, if the player’s total using the first three cards is 19 and the computer’s total using the first two cards is 20, the computer wins.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p id=&quot;MNPFRMEQ2YLYEWWU0179&quot; style=&quot;box-sizing: border-box ; font-family: , &amp;quot;cambria&amp;quot; , &amp;quot;times new roman&amp;quot; , &amp;quot;times&amp;quot; , serif ; line-height: 1.6 ; color: rgb(87 , 87 , 87) ; margin: 0px 0px 15px ; padding: 0px&quot;&gt;Display a message that indicates whether the game ended in a tie, the computer won, or the player won.&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;" style="text;whiteSpace=wrap;html=1;" parent="1" vertex="1">
                    <mxGeometry x="110" y="230" width="550" height="1120" as="geometry"/>
                </mxCell>
                <mxCell id="3" value="Class BlackJackCard inherits from Card&lt;br&gt;&amp;nbsp; &amp;nbsp;Declarations&lt;br&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; private num value&lt;br&gt;&lt;br&gt;public void setValue(num val)&lt;br&gt;&amp;nbsp; &amp;nbsp;if val &amp;lt; 10 then&lt;br&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; value = val&lt;br&gt;&amp;nbsp; &amp;nbsp;elif val == 1&lt;br&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; value = 11&lt;br&gt;&amp;nbsp; &amp;nbsp;else&lt;br&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; value = 10&lt;br&gt;&amp;nbsp; &amp;nbsp;endif&lt;br&gt;return&lt;br&gt;&lt;br&gt;public num getValue()&lt;br&gt;return value" style="whiteSpace=wrap;html=1;align=left;" vertex="1" parent="1">
                    <mxGeometry x="780" y="230" width="310" height="250" as="geometry"/>
                </mxCell>
                <mxCell id="5" value="" style="edgeStyle=none;html=1;" edge="1" parent="1" source="4" target="3">
                    <mxGeometry relative="1" as="geometry"/>
                </mxCell>
                <mxCell id="4" value="A)" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" vertex="1" parent="1">
                    <mxGeometry x="730" y="345" width="30" height="20" as="geometry"/>
                </mxCell>
                <mxCell id="8" value="" style="edgeStyle=none;html=1;" edge="1" parent="1" source="6" target="7">
                    <mxGeometry relative="1" as="geometry"/>
                </mxCell>
                <mxCell id="6" value="B)" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" vertex="1" parent="1">
                    <mxGeometry x="720" y="880" width="30" height="20" as="geometry"/>
                </mxCell>
                <mxCell id="7" value="Start&amp;nbsp;&lt;br&gt;&amp;nbsp; &amp;nbsp;Declarations&lt;br&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; BlackJackCard cards[10]&lt;br&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; BlackJackCard userHand[5]&lt;br&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; BlackJackCard compHand[5]&lt;br&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; num x = 0&amp;nbsp;&lt;br&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; num y = 0&lt;br&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; num total = 0&lt;br&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; num ctotal = 0&lt;br&gt;&lt;br&gt;&amp;nbsp; &amp;nbsp;while x &amp;lt; 10&lt;br&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; cards[x].setSuit(random(12))&lt;br&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; cards[x].setNumber(random(12))&lt;br&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; x += 1&lt;br&gt;&amp;nbsp; &amp;nbsp;endwhile&lt;br&gt;&amp;nbsp; &amp;nbsp;&lt;br&gt;&amp;nbsp; &amp;nbsp;while y &amp;lt; 5&lt;br&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; userHand[y] = cards[y]&lt;br&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; userHand[y].setValue(userHand[y].getNumber())&lt;br&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; compHand[y +5] = cards[y + 5]&lt;br&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; compHand[y].setValue(compHand[y].getNumber())&lt;br&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; y += 1&lt;br&gt;&amp;nbsp; &amp;nbsp;endwhile&lt;br&gt;&amp;nbsp; &amp;nbsp;&lt;br&gt;&amp;nbsp; &amp;nbsp;y = 0&lt;br&gt;&amp;nbsp; &amp;nbsp;while y &amp;lt; 5&lt;br&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; if userHand[y].getValue() + userHand[y + 1].getValue() == 21&lt;br&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;output &quot;player wins&quot;&lt;br&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;break&lt;br&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; elif (total + userHand[y].getValue()) &amp;lt; 21&lt;br&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;total += userHand[y].getValue()&lt;br&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; endif&lt;br&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; y += 1&lt;br&gt;&amp;nbsp; &amp;nbsp;endwhile&lt;br&gt;&lt;br&gt;&amp;nbsp; &amp;nbsp;y = 0&lt;br&gt;&amp;nbsp; &amp;nbsp;while y &amp;lt; 5&lt;br&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; if (ctotal + compHand[y].getValue()) &amp;lt; 21&lt;br&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;ctotal += compHand[y].getValue()&lt;br&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; endif&lt;br&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; y += 1&lt;br&gt;&amp;nbsp; &amp;nbsp;endwhile&lt;br&gt;&lt;br&gt;&amp;nbsp; &amp;nbsp;if total &amp;gt; ctotal then&lt;br&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; output &quot;Player wins&quot;&lt;br&gt;&amp;nbsp; &amp;nbsp;elif cotal &amp;gt; total&amp;nbsp;&lt;br&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; output &quot;Computer wins&quot;&lt;br&gt;&amp;nbsp; &amp;nbsp;elif total == ctotal&amp;nbsp;&lt;br&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; output &quot;Tie Game&quot;&lt;br&gt;&amp;nbsp; &amp;nbsp;endif&lt;br&gt;&lt;br&gt;Stop&lt;br&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;br&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;" style="whiteSpace=wrap;html=1;align=left;" vertex="1" parent="1">
                    <mxGeometry x="780" y="490" width="400" height="800" as="geometry"/>
                </mxCell>
            </root>
        </mxGraphModel>
    </diagram>
</mxfile>