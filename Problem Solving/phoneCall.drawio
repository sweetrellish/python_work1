<mxfile host="65bd71144e">
    <diagram id="j78faLTOl-mAitb7UkoM" name="Page-1">
        <mxGraphModel dx="1878" dy="705" grid="1" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="1" pageScale="1" pageWidth="850" pageHeight="1100" math="0" shadow="0">
            <root>
                <mxCell id="0"/>
                <mxCell id="1" parent="0"/>
                <mxCell id="2" value="&lt;span style=&quot;color: rgb(51, 51, 51); font-family: georgia, times, &amp;quot;times new roman&amp;quot;, serif; font-size: 14px; font-style: normal; font-weight: 400; letter-spacing: normal; text-indent: 0px; text-transform: none; word-spacing: 0px; background-color: rgb(255, 255, 255); display: inline; float: none;&quot;&gt;Complete the following tasks:&lt;/span&gt;&lt;br style=&quot;color: rgb(51, 51, 51); font-family: georgia, times, &amp;quot;times new roman&amp;quot;, serif; font-size: 14px; font-style: normal; font-weight: 400; letter-spacing: normal; text-indent: 0px; text-transform: none; word-spacing: 0px; background-color: rgb(255, 255, 255);&quot;&gt;&lt;br style=&quot;color: rgb(51, 51, 51); font-family: georgia, times, &amp;quot;times new roman&amp;quot;, serif; font-size: 14px; font-style: normal; font-weight: 400; letter-spacing: normal; text-indent: 0px; text-transform: none; word-spacing: 0px; background-color: rgb(255, 255, 255);&quot;&gt;&lt;span style=&quot;color: rgb(51, 51, 51); font-family: georgia, times, &amp;quot;times new roman&amp;quot;, serif; font-size: 14px; font-style: normal; font-weight: 400; letter-spacing: normal; text-indent: 0px; text-transform: none; word-spacing: 0px; background-color: rgb(255, 255, 255); display: inline; float: none;&quot;&gt;a. Design a class named PhoneCall with four fields: two strings that hold the 10-digit phone numbers that originated and received the call, and two numeric fields that hold the length of the call in minutes and the cost of the call. Include a constructor that sets the phone numbers to Xs and the numeric fields to 0. Include get and set methods for the phone number and call length fields, but do not include a set method for the cost field. When the call length is set, calculate the cost of the call at three cents per minute for the first 10 minutes, and two cents per subsequent minute. Create the class diagram and write the pseudocode that defines the class.&lt;/span&gt;&lt;br style=&quot;color: rgb(51, 51, 51); font-family: georgia, times, &amp;quot;times new roman&amp;quot;, serif; font-size: 14px; font-style: normal; font-weight: 400; letter-spacing: normal; text-indent: 0px; text-transform: none; word-spacing: 0px; background-color: rgb(255, 255, 255);&quot;&gt;&lt;br style=&quot;color: rgb(51, 51, 51); font-family: georgia, times, &amp;quot;times new roman&amp;quot;, serif; font-size: 14px; font-style: normal; font-weight: 400; letter-spacing: normal; text-indent: 0px; text-transform: none; word-spacing: 0px; background-color: rgb(255, 255, 255);&quot;&gt;&lt;span style=&quot;color: rgb(51, 51, 51); font-family: georgia, times, &amp;quot;times new roman&amp;quot;, serif; font-size: 14px; font-style: normal; font-weight: 400; letter-spacing: normal; text-indent: 0px; text-transform: none; word-spacing: 0px; background-color: rgb(255, 255, 255); display: inline; float: none;&quot;&gt;b. Design an application that declares three PhoneCalls. Set the length of one PhoneCall to 10 minutes, another to 11 minutes, and allow the third object to use the default value supplied by the constructor. Then, display each PhoneCall's values.&lt;/span&gt;&lt;br style=&quot;color: rgb(51, 51, 51); font-family: georgia, times, &amp;quot;times new roman&amp;quot;, serif; font-size: 14px; font-style: normal; font-weight: 400; letter-spacing: normal; text-indent: 0px; text-transform: none; word-spacing: 0px; background-color: rgb(255, 255, 255);&quot;&gt;&lt;br style=&quot;color: rgb(51, 51, 51); font-family: georgia, times, &amp;quot;times new roman&amp;quot;, serif; font-size: 14px; font-style: normal; font-weight: 400; letter-spacing: normal; text-indent: 0px; text-transform: none; word-spacing: 0px; background-color: rgb(255, 255, 255);&quot;&gt;&lt;span style=&quot;color: rgb(51, 51, 51); font-family: georgia, times, &amp;quot;times new roman&amp;quot;, serif; font-size: 14px; font-style: normal; font-weight: 400; letter-spacing: normal; text-indent: 0px; text-transform: none; word-spacing: 0px; background-color: rgb(255, 255, 255); display: inline; float: none;&quot;&gt;c. Create a child class named InternationalPhoneCall that inherits from PhoneCall. Override the parent class method that sets the call length to calculate the cost of the call at 40 cents per minute.&lt;/span&gt;&lt;br style=&quot;color: rgb(51, 51, 51); font-family: georgia, times, &amp;quot;times new roman&amp;quot;, serif; font-size: 14px; font-style: normal; font-weight: 400; letter-spacing: normal; text-indent: 0px; text-transform: none; word-spacing: 0px; background-color: rgb(255, 255, 255);&quot;&gt;&lt;br style=&quot;color: rgb(51, 51, 51); font-family: georgia, times, &amp;quot;times new roman&amp;quot;, serif; font-size: 14px; font-style: normal; font-weight: 400; letter-spacing: normal; text-indent: 0px; text-transform: none; word-spacing: 0px; background-color: rgb(255, 255, 255);&quot;&gt;&lt;span style=&quot;color: rgb(51, 51, 51); font-family: georgia, times, &amp;quot;times new roman&amp;quot;, serif; font-size: 14px; font-style: normal; font-weight: 400; letter-spacing: normal; text-indent: 0px; text-transform: none; word-spacing: 0px; background-color: rgb(255, 255, 255); display: inline; float: none;&quot;&gt;d. Create the logic for an application that instantiates a PhoneCall object and an InternationalPhoneCall object and displays the costs for each.&lt;/span&gt;" style="text;whiteSpace=wrap;html=1;" parent="1" vertex="1">
                    <mxGeometry x="60" y="90" width="550" height="320" as="geometry"/>
                </mxCell>
                <mxCell id="4" value="Class PhoneCall&lt;br&gt;&amp;nbsp; &amp;nbsp;Declarations&lt;br&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; private num length&lt;br&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; private num cost&lt;br&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; private string numOrigin&lt;br&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; private string numReceived&lt;br&gt;&lt;br&gt;&amp;nbsp; &amp;nbsp;public void setNumOrigin(string origin)&lt;br&gt;&amp;nbsp; &amp;nbsp;numOrigin = origin&lt;br&gt;&amp;nbsp; &amp;nbsp;return&lt;br&gt;&lt;br&gt;&amp;nbsp; &amp;nbsp;public void setNumReceived(string received)&lt;br&gt;&amp;nbsp; &amp;nbsp;numReceived = received&lt;br&gt;&amp;nbsp; &amp;nbsp;return&lt;br&gt;&lt;br&gt;&amp;nbsp; &amp;nbsp;public void setLength(num len)&lt;br&gt;&amp;nbsp; &amp;nbsp;length = len&lt;br&gt;&amp;nbsp; &amp;nbsp;if length &amp;gt; 10 then&amp;nbsp;&lt;br&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; cost += length * 0.03&lt;br&gt;&amp;nbsp; &amp;nbsp;else&amp;nbsp;&lt;br&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; cost += length * 0.02&lt;br&gt;&amp;nbsp; &amp;nbsp;endif&lt;br&gt;&amp;nbsp; &amp;nbsp;return&lt;br&gt;&lt;br&gt;&amp;nbsp; &amp;nbsp;public string getNumOrigin()&lt;br&gt;&amp;nbsp; &amp;nbsp;return numOrigin&lt;br&gt;&lt;br&gt;&amp;nbsp; &amp;nbsp;public string getNumReceived()&lt;br&gt;&amp;nbsp; &amp;nbsp;return numReceived&lt;br&gt;&lt;br&gt;&amp;nbsp; &amp;nbsp;public num getLength()&lt;br&gt;&amp;nbsp; &amp;nbsp;return length&lt;br&gt;&lt;br&gt;&amp;nbsp; &amp;nbsp;public PhoneCall()&lt;br&gt;&amp;nbsp; &amp;nbsp;length = 0&lt;br&gt;&amp;nbsp; &amp;nbsp;cost = 0&lt;br&gt;&amp;nbsp; &amp;nbsp;numOrigin = 'XXXXXXXXXX'&lt;br&gt;&amp;nbsp; &amp;nbsp;numReceived = 'XXXXXXXXXX'" style="whiteSpace=wrap;html=1;align=left;" vertex="1" parent="1">
                    <mxGeometry x="350" y="490" width="350" height="570" as="geometry"/>
                </mxCell>
                <mxCell id="5" value="PhoneCall" style="whiteSpace=wrap;html=1;align=left;" vertex="1" parent="1">
                    <mxGeometry y="490" width="340" height="60" as="geometry"/>
                </mxCell>
                <mxCell id="6" value="numOrigin: string&lt;br&gt;numReceived : string&lt;br&gt;length : num&lt;br&gt;cost : num" style="whiteSpace=wrap;html=1;align=left;" vertex="1" parent="1">
                    <mxGeometry y="550" width="340" height="90" as="geometry"/>
                </mxCell>
                <mxCell id="7" value="setNumOrigin( origin : string) : void&lt;br&gt;setNumReceived( received : string) : void&lt;br&gt;setLength(len: num) : void&lt;br&gt;getNumOrigin() : string&lt;br&gt;getNumReceived() : string&lt;br&gt;getLength() : num&lt;br&gt;PhoneCall() : void" style="whiteSpace=wrap;html=1;align=left;" vertex="1" parent="1">
                    <mxGeometry y="640" width="340" height="130" as="geometry"/>
                </mxCell>
                <mxCell id="8" value="A)" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" vertex="1" parent="1">
                    <mxGeometry x="-40" y="490" width="30" height="20" as="geometry"/>
                </mxCell>
                <mxCell id="11" value="" style="edgeStyle=none;html=1;entryX=0.005;entryY=0.095;entryDx=0;entryDy=0;entryPerimeter=0;" edge="1" parent="1" source="9" target="10">
                    <mxGeometry relative="1" as="geometry"/>
                </mxCell>
                <mxCell id="9" value="B)" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" vertex="1" parent="1">
                    <mxGeometry x="655" y="90" width="30" height="20" as="geometry"/>
                </mxCell>
                <mxCell id="10" value="Start&lt;br&gt;&amp;nbsp; &amp;nbsp;Declarations&lt;br&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; PhoneCall call1&lt;br&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; PhoneCall call2&lt;br&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; PhoneCall call3&lt;br&gt;&lt;br&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; call1.setLength(10)&lt;br&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; call2.setLength(11)&lt;br&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; call1.getNumOrigin()&lt;br&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; call1.getNumReceived()&lt;br&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; call1.getLength()&lt;br&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; output &quot;Cost for call 1:&quot;, call1.cost&lt;br&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; call2.getNumOrigin()&lt;br&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; call2.getNumReceived()&lt;br&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; call2.getLength()&lt;br&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; output &quot;Cost for call 2:&quot;, call1.cost&lt;br&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; call3getNumOrigin()&lt;br&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; call3.getNumReceived()&lt;br&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; call3.getLength()&lt;br&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; output &quot;Cost for call 3:&quot;, call1.cost&lt;br&gt;Stop" style="whiteSpace=wrap;html=1;align=left;" vertex="1" parent="1">
                    <mxGeometry x="720" y="70" width="410" height="320" as="geometry"/>
                </mxCell>
                <mxCell id="14" value="" style="edgeStyle=none;html=1;entryX=0.004;entryY=0.33;entryDx=0;entryDy=0;entryPerimeter=0;" edge="1" parent="1" source="12" target="13">
                    <mxGeometry relative="1" as="geometry"/>
                </mxCell>
                <mxCell id="12" value="C)" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" vertex="1" parent="1">
                    <mxGeometry x="725" y="440" width="30" height="20" as="geometry"/>
                </mxCell>
                <mxCell id="13" value="Class InternationalPhoneCall inheritsFrom PhoneCall&lt;br&gt;&amp;nbsp; &amp;nbsp;Declarations&lt;br&gt;&amp;nbsp; &amp;nbsp;public void setLength(num len)&lt;br&gt;&amp;nbsp; &amp;nbsp;cost += len *0.4&lt;br&gt;&amp;nbsp; &amp;nbsp;return" style="whiteSpace=wrap;html=1;align=left;" vertex="1" parent="1">
                    <mxGeometry x="790" y="420" width="300" height="100" as="geometry"/>
                </mxCell>
                <mxCell id="18" value="" style="edgeStyle=none;html=1;" edge="1" parent="1" source="15" target="17">
                    <mxGeometry relative="1" as="geometry"/>
                </mxCell>
                <mxCell id="15" value="D)" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" vertex="1" parent="1">
                    <mxGeometry x="740" y="585" width="30" height="20" as="geometry"/>
                </mxCell>
                <mxCell id="17" value="Start&lt;br&gt;&amp;nbsp; &amp;nbsp;Declarations&lt;br&gt;&amp;nbsp; &amp;nbsp;PhoneCall call1&amp;nbsp;&lt;br&gt;&amp;nbsp; &amp;nbsp;InternationalPhoneCall call2&lt;br&gt;&amp;nbsp;&amp;nbsp;&lt;br&gt;&amp;nbsp; &amp;nbsp;call1.setLength(10)&lt;br&gt;&amp;nbsp; &amp;nbsp;call2.setLength(10)&lt;br&gt;&amp;nbsp; &amp;nbsp;output &quot;Cost for Regular call :&quot;, call1.cost&lt;br&gt;&amp;nbsp; &amp;nbsp;output &quot;Cost for International call: &quot;, call2.cost&lt;br&gt;&lt;br&gt;Stop" style="whiteSpace=wrap;html=1;align=left;" vertex="1" parent="1">
                    <mxGeometry x="805" y="565" width="285" height="165" as="geometry"/>
                </mxCell>
            </root>
        </mxGraphModel>
    </diagram>
</mxfile>